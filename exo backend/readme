Projet Recrutement - API Django avec Swagger Documentation

Ce projet est une plateforme de recrutement construite avec Django et Django Rest Framework (DRF). L'objectif est de permettre l'intégration des candidats, des offres d'emploi et la gestion des applications via une API REST. La documentation de l'API est générée à l'aide de drf-yasg pour fournir une interface Swagger.

...Prérequis

Avant de commencer, assurez-vous d'avoir les éléments suivants installés sur votre machine :

    Python 3.x
    pip (gestionnaire de paquets pour Python)
    Django 5.x
    Django Rest Framework
    drf-yasg (pour Swagger UI)

...Installation

    Clonez le dépôt du projet  :

git clone <url_du_dépôt>
cd <dossier_du_projet>

Installez les dépendances :

***Assurez-vous d'être dans le répertoire du projet, puis exécutez la commande suivante pour installer toutes les dépendances requises dans le fichier requirements.txt :

pip install -r requirements.txt

Configuration des fichiers statiques :

*****Assurez-vous que les fichiers statiques sont correctement configurés dans votre fichier settings.py :

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"

.......Appliquez les migrations pour créer les tables de base de données :
python manage.py makemigrations
python manage.py migrate

Démarrez le serveur Django :

...*LANCEMENT DU SERVEUR LOCAL  :

    python manage.py runserver

    Accédez à l'interface Swagger :

    Si tout est configuré correctement, vous pouvez accéder à la documentation de l'API Swagger à l'URL suivante :
    http://127.0.0.1:8000/swagger/

   ** Note : Si cette URL ne fonctionne pas (erreur 404 ou 500), cela peut être dû à une mauvaise configuration de drf-yasg ou à un problème dans le répertoire de fichiers statiques.
    accéder alors à l'url direct :
    http://127.0.0.1:8000/static/drf-yasg/swagger-ui/swagger-ui.html

.....Résolution des problèmes liés à Swagger UI
1. Vérifier la configuration de drf-yasg

Si vous obtenez une erreur TemplateDoesNotExist pour drf-yasg/swagger-ui.html, il se peut que les fichiers statiques nécessaires ne soient pas accessibles. Assurez-vous que :

    drf-yasg est bien installé dans votre environnement (pip install drf-yasg).
    Les fichiers statiques sont correctement collectés et servis. Vous pouvez vérifier la présence des fichiers swagger-ui.html et associés dans votre dossier static ou staticfiles.

2. Démarrer avec la documentation

Si le problème persiste, vous pouvez vérifier si votre fichier urls.py est bien configuré comme suit :

from rest_framework import permissions
from drf_yasg.views import get_schema_view
from drf_yasg import openapi

schema_view = get_schema_view(
    openapi.Info(
        title="API Recrutement",
        default_version='v1',
        description="Documentation API pour la plateforme de recrutement",
        contact=openapi.Contact(email="contact@example.com"),
    ),
    public=True,
    permission_classes=(permissions.AllowAny,),
)

urlpatterns = [
    path('swagger/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),
    path('admin/', admin.site.urls),
    path('api/', include('candidat.urls')),
]

N'oubliez pas de vérifier la configuration des fichiers statiques dans settings.py et de les servir correctement lors du développement.
Structure du Projet

 .....ARCHITECTURE DU PROJET :Voici la structure principale de votre projet Django :



recrutement/
├── recrutement/
│   ├── settings.py        # Paramètres de configuration de 
│   ├── urls.py            # Gestion des routes URL
│   ├── wsgi.py            # Point d'entrée pour le déploiement
│   └── asgi.py            # Pour les connexions WebSocket 
├── candidat/              # Application pour la gestion des 
│   ├── models.py          # Modèles de données pour les 
│   ├── views.py           # Vues pour les candidats
│   ├── serializers.py     # Sérialise les modèles pour l'API
│   ├── urls.py            # Routes des candidats
│   └── admin.py           # Interface d'administration Django
├── manage.py             # Outil de gestion de Django
├── static/                # Dossier contenant les fichiers 
└── templates/             # Dossier pour les templates HTML




....Explications sur les principales parties(FICHIERS) du projet

    drf-yasg : Bibliothèque utilisée pour générer la documentation de l'API via Swagger.
    
    views.py : Contient les vues de l'application (par exemple, la vue pour l'interface Swagger).
    
    urls.py : Définit les routes de votre API, y compris la route pour afficher la documentation Swagger.
    
    settings.py : Contient la configuration générale de Django, y compris la gestion des fichiers statiques. Contient aussi les information nécessaires à la connexion avec la database POSTGRESQL